"use strict";function Ribbon(t,e){this.bounds=t,this.velocity=new THREE.Vector3,this.speed=ATUtil.randomRange(.0075,.015)*e,this.ribbonWidth=ATUtil.randomRange(.05,.1)*e,this.head=new THREE.Vector3,this.tail=new THREE.Vector3,this.meshGeom=createRibbonGeometry.call(this),reset.call(this)}const ribbonLength=250,ribbonNoiseScale=1e3,ribbonNoiseSeparation=1.5,up=new THREE.Vector3(0,1,0);var vec=new THREE.Vector3,tangent=new THREE.Vector3,normal=new THREE.Vector3;const createRibbonGeometry=function(){var t,e=new THREE.Geometry;for(e.vertexColors=[],t=0;ribbonLength>t;t++)e.vertices.push(new THREE.Vector3),e.vertices.push(new THREE.Vector3),e.vertexColors.push(new THREE.Color),e.vertexColors.push(new THREE.Color);for(t=0;249>t;t++)e.faces.push(new THREE.Face3(2*t,2*t+1,2*t+2)),e.faces.push(new THREE.Face3(2*t+1,2*t+3,2*t+2));return e},reset=function(){var t;for(this.id=Math.random()*ribbonNoiseSeparation,this.head.copy(ATUtil.randomVector3(this.bounds)),this.tail.copy(this.head),t=0;ribbonLength>t;t++)this.meshGeom.vertices[2*t].copy(this.head),this.meshGeom.vertices[2*t+1].copy(this.head);var e=this.head.x/(.5*this.bounds)*.5+.5,n=ATUtil.randomRange(.5,.7),r=new THREE.Color;for(t=0;249>t;t++)r.setHSL(e,1,(1-t/ribbonLength)*n*.25+3*n*.25),this.meshGeom.faces[2*t].color.copy(r),this.meshGeom.faces[2*t+1].color.copy(r);this.meshGeom.verticesNeedUpdate=!0,this.meshGeom.colorsNeedUpdate=!0};Ribbon.prototype={constructor:Ribbon,update:function(t){t/=1e4,this.tail.copy(this.head),vec.copy(this.head).divideScalar(ribbonNoiseScale),this.velocity.x=noise.noise4d(vec.x,vec.y,vec.z,t+this.id)*this.speed,this.velocity.y=noise.noise4d(vec.x,vec.y,vec.z,t+50*this.id)*this.speed,this.velocity.z=noise.noise4d(vec.x,vec.y,vec.z,t+10*this.id)*this.speed,this.head.add(this.velocity),(this.head.x>this.bounds||this.head.x<-this.bounds||this.head.y>this.bounds||this.head.y<-this.bounds||this.head.z>this.bounds||this.head.z<-this.bounds)&&reset.call(this),tangent.subVectors(this.head,this.tail).normalize(),vec.crossVectors(tangent,up).normalize(),normal.crossVectors(tangent,vec),normal.multiplyScalar(this.ribbonWidth);var e;for(e=249;e>0;e--)this.meshGeom.vertices[2*e].copy(this.meshGeom.vertices[2*(e-1)]),this.meshGeom.vertices[2*e+1].copy(this.meshGeom.vertices[2*(e-1)+1]);this.meshGeom.vertices[0].copy(this.head).add(normal),this.meshGeom.vertices[1].copy(this.head).sub(normal),this.meshGeom.verticesNeedUpdate=!0}};